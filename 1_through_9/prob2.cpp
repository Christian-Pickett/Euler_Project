//Even Fibonacci numbers
//https://projecteuler.net/problem=2

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

#include <iostream>

using namespace std;

int fibGen(int x){

	if (x == 0)
		return 0;

	if (x == 1)
		return 1;
	
	return fibGen(x-1) + fibGen(x-2);
}

int fibSummer() {

	int sum = 0;

	for(int i = 0; i < 34; i++) {

		if(fibGen(i) % 2 == 0) {
			
			sum = sum + fibGen(i);
		}
	}	
	return sum;
}

int main() {

	cout << fibSummer() << endl;
	//Answer: 4613732
}

	
